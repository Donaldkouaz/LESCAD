<?php

namespace lescad\platformeBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\HttpFoundation\File\File;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

/**
 * service
 *
 * @ORM\Table(name="ssservice")
 * @ORM\Entity(repositoryClass="lescad\platformeBundle\Repository\SssRepository")
 * @Vich\Uploadable
 */
class Sss
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nom", type="string", length=255, unique=true)
     */
    private $nom;

    /**
     * @var string
     *
     * @ORM\Column(name="description", type="text", nullable=true)
     */
    private $description;
    
        /**
     * @var string
     * @Gedmo\Slug(fields={"nom"})
     * @ORM\Column(name="slug", type="string", length=255, unique=true)
     */
    private $slug;
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="datemodification", type="datetimetz", nullable=true)
     */
    private $datemodification;

   /**
     * 
     * @Vich\UploadableField(mapping="formation_image", fileNameProperty="nomImage", size="tailleImage")
     * 
     * @var File
     */
    private $fichierImage;
    
     /**
     * 
     * @Vich\UploadableField(mapping="formation_banniere", fileNameProperty="nomBanniere", size="tailleBanniere")
     * 
     * @var File
     */
    private $fichierBanniere;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     *
     * @var string
     */
    private $nomImage;

    /**
     * @ORM\Column(type="integer", nullable=true)
     *
     * @var integer
     */
    private $tailleImage;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     *
     * @var string
     */
    private $nomBanniere;

    /**
     * @ORM\Column(type="integer", nullable=true)
     *
     * @var integer
     */
    private $tailleBanniere;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nom
     *
     * @param string $nom
     *
     * @return service
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get nom
     *
     * @return string
     */
    public function getNom()
    {
        return $this->nom;
    }

    /**
     * Set description
     *
     * @param string $description
     *
     * @return service
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set slug
     *
     * @param string $slug
     *
     * @return service
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Get slug
     *
     * @return string
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Set nomImage
     *
     * @param string $nomImage
     *
     * @return Sss
     */
    public function setNomImage($nomImage)
    {
        $this->nomImage = $nomImage;

        return $this;
    }

    /**
     * Get nomImage
     *
     * @return string
     */
    public function getNomImage()
    {
        return $this->nomImage;
    }

    /**
     * Set tailleImage
     *
     * @param integer $tailleImage
     *
     * @return Sss
     */
    public function setTailleImage($tailleImage)
    {
        $this->tailleImage = $tailleImage;

        return $this;
    }

    /**
     * Get tailleImage
     *
     * @return integer
     */
    public function getTailleImage()
    {
        return $this->tailleImage;
    }

    /**
     * Set nomBanniere
     *
     * @param string $nomBanniere
     *
     * @return Sss
     */
    public function setNomBanniere($nomBanniere)
    {
        $this->nomBanniere = $nomBanniere;

        return $this;
    }

    /**
     * Get nomBanniere
     *
     * @return string
     */
    public function getNomBanniere()
    {
        return $this->nomBanniere;
    }

    /**
     * Set tailleBanniere
     *
     * @param integer $tailleBanniere
     *
     * @return Sss
     */
    public function setTailleBanniere($tailleBanniere)
    {
        $this->tailleBanniere = $tailleBanniere;

        return $this;
    }

    /**
     * Get tailleBanniere
     *
     * @return integer
     */
    public function getTailleBanniere()
    {
        return $this->tailleBanniere;
    }
    
        /**
     * If manually uploading a file (i.e. not using Symfony Form) ensure an instance
     * of 'UploadedFile' is injected into this setter to trigger the  update. If this
     * bundle's configuration parameter 'inject_on_load' is set to 'true' this setter
     * must be able to accept an instance of 'File' as the bundle will inject one here
     * during Doctrine hydration.
     *
     * @param File|\Symfony\Component\HttpFoundation\File\UploadedFile $image
     *
     * @return Product
     */
    public function setFichierImage(File $image = null) {
        $this->fichierImage = $image;

        if ($image) {
            // It is required that at least one field changes if you are using doctrine
            // otherwise the event listeners won't be called and the file is lost
            $this->datemodification = new \DateTimeImmutable();
        }

        return $this;
    }

    /**
     * @return File|null
     */
    public function getFichierImage() {
        return $this->fichierImage;
    }
    
        public function setFichierBanniere(File $image = null) {
        $this->fichierBanniere = $image;

        if ($image) {
            // It is required that at least one field changes if you are using doctrine
            // otherwise the event listeners won't be called and the file is lost
            $this->datemodification = new \DateTimeImmutable();
        }

        return $this;
    }

    /**
     * @return File|null
     */
    public function getFichierBanniere() {
        return $this->fichierBanniere;
    }

}
